* {
  box-sizing: border-box;
}

:root {
  --primary-color: rgb(0, 0, 0);
  --a-color: #2719a0;
  --a-visited: #1967ce;
  --body-background-color: rgb(199, 197, 197);
  --a-activ: #c20f3c;
  --button-background-color: #4c17ad;
  --grid-item-color: lightgray;
}

body {
  background-color: var(--body-background-color);
  font-family: "Sixtyfour", sans-serif;
  font-weight: 450;
  font-size: 16px;
  line-height: 1.5;
  padding: 20px;
}

h1 {
  color: var(--primary-color);
  font-size: 30px;
  font-weight: 700;
  padding: 10px;
}

a {
  color: var(--a-color);
  font-size: 16px; /* Set your initial font size */
  transition: transform 0.3s ease; /* Add transition to the transform property with a duration of 0.3s */
  display: inline-block; /* Ensures the link behaves as a block element for sizing */
}

a:hover,
a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
  transform: scale(1.2);
}

a:visited {
  /* visited link */
  color: var(--a-visited);
}

a:active {
  /* selected link */
  color: var(--a-activ);
}

.maininfo {
  padding: 20px;
}

footer {
  padding: 20px;
}

.img-logo {
  width: 15%;
  height: 10%;
}

.laptop__SVG__container {
  display: flex;
  align-items: center;
  justify-content: center;
}

.about-me {
  display: flex;
  align-items: center;
  flex-direction: column;
}

th {
  text-align: left;
}

button {
  /* overwrites browser defaults and resets the border */
  border: none; /* takes the font from the outer container */
  font-family: inherit; /* styles the background color, font color, and text decoration (underline, etc.) of the button */
  background-color: var(--button-background-color);
  color: white;
  text-decoration: none; /* adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px; /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: transform 0.5s ease, padding 0.3s ease, font-size 0.3s ease; /* Add transitions for smooth effect */
}

button:hover,
button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer; /* reduces the opacity of the button to 80% */

  opacity: 0.8;
  transform: scale(1.02); /* Scale the button to 120% on hover (adjust as needed) */
  padding: 15px; /* Increase the padding on hover (adjust as needed) */
  font-size: 12px; /* Increase the font size on hover (adjust as needed) */
}

#laptop__SVG {
  animation: growShrinkAnimation 2s ease-in-out 2;
}

h1 {
  transition: transform 0.3s ease; /* Add transition to the transform property with a duration of 0.3s */
}

/* Define the CSS keyframes for the grow and shrink animation */
@keyframes growShrinkAnimation {
  0%,
  100% {
    transform: scale(1); /* Initial and final size is 100% */
  }

  50% {
    transform: scale(1.5); /* Grow to 150% halfway through the animation */
  }
}

h1:hover {
  transform: scale(1.05); /* Scale the grid item to 120% on hover (adjust as needed) */
}

.header-bar {
  display: flex;
  align-items: center;
  flex-direction: row;
  justify-content: space-between;
  margin-bottom: 30px;
}

.navigation-list__item--active {
  text-decoration: none;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
  transition: transform 0.3s ease, padding 0.3s ease, font-size 0.3s ease; /* Add transitions for smooth effect */
}

.page-footer:hover {
  transform: scale(1.05); /* Scale the button to 120% on hover (adjust as needed) */
  padding: 15px; /* Increase the padding on hover (adjust as needed) */
  font-size: 18px; /* Increase the font size on hover (adjust as needed) */
}

.footer-button {
  width: 20%;
  justify-content: center;
}

.contact-form,
.contact-form-input {
  text-align: center;
}

.main-contact {
  display: flex;
  flex-direction: column;
}

footer {
  margin-top: auto;
}

/* start grid fallback */
.grid__item {
  display: inline-block;
  width: 33%;
  transition: transform 0.3s ease /* Add transition to the transform property with a duration of 0.3s */
}

.grid__item:hover {
  transform: scale(1.05);/* Scale the grid item to 120% on hover (adjust as needed) */
}

/* end grid fallback */

@supports (display: grid) {
  .grid {
    display: grid; /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 15px;
    margin: 0;
  }

  .grid__item {
    background-color: var(--grid-item-color);
    width: auto;
    min-height: auto;
    margin: 0;
  }

  .grid__item:last-child {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }

  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }

  h1 {
    font-size: 20px;
  }
}

@media screen and (max-width: 768px) {
  .grid-container {
    grid-template-columns: 1fr; /* Adjust to a 1-column layout */
  }
}

/* Optional: Define additional breakpoints for further adjustments */
@media screen and (max-width: 480px) {
  .grid-container {
    grid-template-columns: 1fr; /* Adjust to a 1-column layout for even smaller screens */
  }
}

